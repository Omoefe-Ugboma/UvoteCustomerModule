https://app.pluralsight.com/course-player?clipId=c6dfdf97-73b3-4ea9-aa9d-50bde793cf15


point 1) We can think of decorators as metadata added to our code. 
        When we use @Component on the HelloWorld class, we are 
        “decorating” He
point 2) It repeats, but something is wrong here - every name says 
         “Felipe”! We need a way to pass data into the child component.
         Thankfully, Angular provides a way to do this: the @Input decorator
point 3) Our @NgModule decorator has four keys: declarations, imports, 
         providers, and bootstrap.

A) Declarations--
  declarations specifies the components that are defined in this module. This is an
  important idea in Angular: You have to declare components in a NgModule before 
  you can use them in your templates. You can think of an NgModule a bit like a 
  “package” and declarations states what components are “owned by” this module.

B) imports
   imports describes which dependencies this module has. We’re creating a browser
   app, so we want to import the BrowserModule.
C) providers
   providers is used for dependency injection. So to make a service available to be
   injected throughout our application, we will add it here.
D) bootstrap
   bootstrap tells Angular that when this module is used to bootstrap an app, we need
   to load the AppComponent component as the top-level component.

